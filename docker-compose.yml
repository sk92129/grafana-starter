version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_PASSWORD=grafana123
      - GF_DATABASE_PORT=5432
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - grafana-network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=grafana
      - POSTGRES_PASSWORD=grafana123
      - POSTGRES_DB=grafana
    volumes:
      - postgres-storage:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - grafana-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grafana"]
      interval: 10s
      timeout: 5s
      retries: 5

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -log.level=debug
    volumes:
      - ./config/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/tmp/loki
    networks:
      - grafana-network
    restart: unless-stopped
    user: "0"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_AGENT_PORT=14250
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "14250:14250"  # jaeger-grpc
      - "14268:14268"  # jaeger-thrift-http
      - "3200:3200"    # tempo
      - "4317:4317"    # otlp grpc
      - "4318:4318"    # otlp http
    networks:
      - grafana-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3200/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    networks:
      - grafana-network

networks:
  grafana-network:
    driver: bridge

volumes:
  grafana-storage:
  postgres-storage:
  prometheus-storage:
  loki-data:   